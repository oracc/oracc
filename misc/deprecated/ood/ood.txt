OOD GDF implementation

1) Creation
===========

Each OOD dataset is a subproject in the specially named 'ood' space. So,
for a project cbfwnd, the subproject is:

  @@ORACC@@/PROJECT/ood/cbfwnd

The subproject is required to have a 00lib directory which contains a 
standard config.xml, and a collection of files as described below. It
must also have a 00web directory which may be autogenerated from the
metadata file gdf.xml as described below.

2) Installation and Backup
==========================

Installation and backup are the same as for another subproject.

3) Files
========

The following files are required for an OOD dataset, all of them
living in 00lib.

	config.xml -- OOD requires a config.xml which contains the
		        basic project naming metadata and must have
		        the type set to 'ood'.  The config.xml must
		        also have all of the required settings for
		        outlining, but may only have the 'default'
		        set;

	ood.xml    -- In addition, OOD requires a second data-centric
		        configuration file, ood.xml;

        data.xml   -- the XML data (even this is optional; 
      		     	     	   see penn/data/cbs)

        record.xsl -- XSL styling for the data to apply to a record
       		        for browsing the data;

        record.css -- CSS styling for the data, this may be empty.

3) Update
=========

The update is the same as any other project from the user's perspective.

4) IDs and URIs
===============

IDs in an OOD dataset are simple numbers with padding suffient to ensure
that they are all the same length across the dataset.

If the OOD dataset has an XML data component it must have an id_ood field
(analogous to id_text in the P-catalogue and id_composite in the Q-catalogue)
which gives these numbers in sequence.

Because IDs in Oracc are always namespaced into projects, the xml:id
for an OOD record is the simple concatenation of 'o' prepended to the
number.

5) Persistence and stability
============================

OOD URIs are intended to be persistent and stable and this is straightforward
to achieve with datasets that are no longer being modified.

In order to effect stability across changing datasets it is necessary for the
dataset to have an ID field which is guaranteed to be itself unchangeable. This
is defined in the dataset's ood.xml with the ood-ref-id element.
