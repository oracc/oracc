#!/usr/bin/perl
use warnings; use strict; use open ':utf8';
binmode STDIN, ':utf8'; binmode STDOUT, ':utf8';
use lib '@@ORACC@@/lib';
use ORACC::SL::BaseC;

#
# Not sure whether the eval and SIG stuff is needed 
# here but we use it in the sma called from ox so if
# this ends up being called by ox or something else
# later we might as well have it in place now.
#

my $warning = '';

$SIG{'__WARN__'} = \&save_warning;
$SIG{'__DIE__'} = \&save_warning;

$| = 1;

ORACC::SL::BaseC::init();

while (<>) {
      chomp;
      eval {
	  my @tlit = ORACC::SL::BaseC::tlitsplit($_);
	  if ($#tlit >= 0) {
	      my $sig = ORACC::SL::BaseC::_signature("<stdin>:$.:", @tlit);
	      if ($sig) {
		  print "$sig\n";
	      } else {
		  my $tlit = join(':', '', @tlit, '');
		  warn "#signature failed on $tlit\n";
	      }
	  } else {
	      warn "#split failed on $_\n";
	  }
      };
      $warning = $@ if $@ && !$warning;
      if ($warning) {
	  syswrite STDOUT, $warning;
      } # else we printed a signature
}

sub
save_warning {
    die(@_);
}

1;
