#!/usr/bin/perl
use warnings; use strict; use open 'utf8';
use Getopt::Long;
use Pod::Usage;

my $atf = '';
my $otf = '';
my $project = '';
my $workdir = '';

GetOptions(
    'atf:s'=>\$atf,
    'otf:s'=>\$otf,
    'project:s'=>\$project,
    'workdir:s'=>\$workdir,
    );

my $otfdir = $workdir;
my $blddir = $otfdir; $blddir =~ s#www/pdf#bld#;

# my $project = `cat $blddir/buildstamp`; warn "$0: project=$project\n";

warn "atf-driver.plx: atf=$atf; otf=$otf; otfdir=$otfdir; blddir=$blddir\n";

my $xmd = $atf;
my $xmdo = find_xmdoutline();
my @md = `xsltproc $xmdo $xmd`;

open(O,">$otfdir/$otf") || die "$0: unable to open $otfdir/$otf for write\n";
print O <<EOF;
\@document

\@project $project

\@title Oracc Edition of $project : $atf

\@section introduction

This PDF was generated by Oracc.

\@end section

\@newpage

\@section edition
    
\@atffile $blddir/$atf

\@end section

\@end document

EOF

sub find_xmdoutline {
    my $eproject = $project;
    my $parent_project = $eproject;
    $parent_project =~ s#/.*$##;
    if (find_xmdoutline_sub("$oraccwww/$eproject/xmdoutline.xsl")) {
	"$oraccwww/$eproject/xmdoutline.xsl";
    } elsif ($parent_project ne $eproject 
	     && find_xmdoutline_sub("$oraccwww/$parent_project/xmdoutline.xsl")) {
	"$oraccwww/$parent_project/xmdoutline.xsl";
    } else {
	"$oracclib/scripts/p3-xmd-div.xsl";
    }
}

sub find_xmdoutline_sub {
    my $ok = (-r $_[0] ? 'found' : 'not found');
    warn "trying xmdoutline $_[0] => $ok\n";
    $ok eq 'found';
}

1;
